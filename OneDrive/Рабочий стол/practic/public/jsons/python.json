{
  "info": [
    {
      "type": "h1",
      "content": "Основы Python"
    },
    {
      "type": "p",
      "content": "Данный курс посвящён изучению языка программирования Python.\n\nВ настоящее время существует множество языков программирования. Может возникнуть вопрос: неужели нет какого-то одного универсального языка? Универсальный язык, который напрямую «понимает» компьютер, — язык машинных команд.\n\nОднако человеку писать на таком языке очень сложно. Например, программа, которая выводит на экран строку «Hello, world!», на языке машинных команд будет выглядеть так: BB 11 01 B9 0D 00 B4 0E 8A 07 43 CD 10 E2 F9 CD 20 48 65 6C 6C 6F 2C 20 77 6F 72 6C 64 21.\n\nПоэтому были разработаны языки программирования, правила и команды которых понятны для человека, а сами языки похожи на «естественные». Та же самая программа, выводящая фразу «Hello, world!», на языке Python выглядит следующим образом:"
    },
    {
      "type": "code",
      "content": "print(“Hello, world!”)"
    },
    {
      "type": "p",
      "content": "У разных языков программирования есть свои достоинства и недостатки. В среде программистов считается, что одним из самых простых языков для новичков является именно Python (правильно его читать как «пайтон», с ударением на первый слог).\n\nПервая версия Python была разработана в 1991 году программистом из Нидерландов Гвидо ван Россумом. В настоящее время выходят новые версии языка, которые расширяют его возможности, а сам он занимает верхние строчки рейтингов языков программирования. Python применяется во многих сферах: веб-разработка, анализ данных и машинное обучение и др.\n\nГлавное достоинство Python — простота синтаксиса и команд, а также большое количество библиотек, которые содержат уже написанный программный код для решения широкого спектра задач. Python даже применяют в своих исследованиях и разработках специалисты, чьи профессии напрямую не связаны с программированием. Один из самых частых примеров — применение Python для анализа большого количества данных и нахождения корреляции между ними.\n\nВсе языки программирования можно условно разделить на две большие группы: компилируемые и интерпретируемые. Программы, написанные на компилируемых языках программирования, преобразуются (компилируются) в машинный код и становятся исполняемыми (например, в операционной системе Windows это чаще всего будет файл с расширением .exe). Программы, написанные на интерпретируемых языках (в их числе и Python), не компилируются, и для их запуска требуется специальная программа — интерпретатор.\n\nЕсли у вас уже установлен интерпретатор и настроена среда разработки, вы можете смело переходить к следующей главе. А если нет — скачать интерпретатор для нужной операционной системы можно на сайте. Рекомендуемая версия — 3.10.\n\nДалее необходимо сохранить файл-установщик и затем его запустить. Обратите внимание, что интерпретатор лучше установить в папку, в пути к которой будут только символы английского алфавита (это позволит в будущем избежать проблем с некоторыми библиотеками). Также не забудьте установить флажок «Add to PATH» для добавления путей до интерпретатора и вспомогательных программ в переменные окружения (это действие позволит обращаться к интерпретатору и установщику библиотек из любой папки системы).\n\nПосле установки можно сразу приступить к созданию и запуску программ. Возникает вопрос: а где писать программы? Ответить можно так: где угодно, даже в «Блокноте». Главное, чтобы файл с программой сохранялся как текст, а у файла было расширение .py (английскими буквами, читается как «пай»). Затем эти программы можно запустить из командной строки следующим образом:"
    },
    {
      "type": "code",
      "content": "python program_1.py\n\n"
    },
    {
      "type": "p",
      "content": "Эту запись можно расшифровать так: «Операционная система, запусти интерпретатор — пусть он прочитает файл с нашей программой».\n\nОднако писать программы в «Блокноте» не очень удобно — он даже не покажет опечатки и синтаксические ошибки. Поэтому для создания программ обычно используют специальные интегрированные среды разработки (IDE — Integrated Development Environment).\n\nДля начала изучения Python вполне хватит среды разработки Visual Studio Code (также можно использовать Pycharm, однако он чуть более сложен в настройке). Необходимо скачать дистрибутив (установщик программы) для вашей операционной системы с сайта. После сохранения файла-инсталлятора его необходимо запустить, и начнётся процесс установки.\n\nПараметры установки можно оставить по умолчанию. Как только она завершится, среду разработки можно запускать. Дополнительно стоит установить расширение для работы с Python (хотя часто оно устанавливается автоматически).\n\nЗапустив среду разработки, нажмите на иконку, как показано на рисунке ниже."
    },
    {
      "type":  "img",
      "content": "0_1_4fdfcaa7c3"
    },
    {
      "type":  "p",
      "content": "Слева откроется панель расширений. В поисковой строке наберите «Python» и установите это расширение, нажав на кнопку «Установить» (или убедитесь, что оно установлено автоматически, в таком случае не будет кнопки «Установить»).\n\n"
    },
    {
      "type":  "img",
      "content":  "0_2_035f0af3a0.png"
    },
    {
      "type": "p",
      "content": "Создайте папку с проектом, в котором будете создавать программы. Для этого выберите в стартовом окне пункт «Открыть папку», а затем создайте новую папку с проектом.\n\nВ панели проводника появится проект с заданным вами именем. Справа от названия выберите иконку создания нового файла."
    },
    {
      "type": "img",
      "content": "0_3_dc2c6d33ba.png"
    },
    {
      "type": "p",
      "content": "Дайте имя файлу, например example_1.py.\n\n"
    },
    {
      "type": "img",
      "content": "0_4_0fd1dd9bfd.png"
    },
    {
      "type": "p",
      "content": "Выберите внизу, в строке состояния, пункт «Выбор интерпретатора», а затем один из установленных интерпретаторов вашей системы.\n\n"
    },
    {
      "type": "img",
      "content": "0_5_ab12159cf1.png"
    },
    {
      "type": "p",
      "content": "Чтобы проверить правильность первоначальной настройки, скопируйте следующий код и запустите его, нажав на кнопку с треугольником справа вверху:\n\n"
    },
    {
      "type": "code",
      "content": "print(\"Привет, мир!\")"
    },
    {
      "type": "p",
      "content": "Проверьте, что после запуска программы в нижней части окна среды разработки появилась вкладка «Терминал» и в ней напечатана фраза «Привет, мир!»."
    },
    {
      "type":  "img",
      "content":  "0_6_9d1d507e89.png"
    },
    {
      "type": "p",
      "content": "Поздравляем, всё готово к работе! В следующей главе вы узнаете, как работать с числами и строками, и познакомитесь с первыми функциями."
    }
  ],
  "video": "https://www.youtube.com/embed/fp5-XQFr_nk",
  "tasks": [
    "Повторить описанные действия из статьи"
  ],
  "result": "",
  "test": {
    "head": "Тест для закрепления материала",
    "body": [
      {
        "title": "Что такое Python?",
        "content": [
          {
            "title": "высокоуровневый язык программирования",
            "result": true
          },
          {
            "title": "база данных",
            "result": false
          },
          {
            "title": "язык гипертекстовой разметки",
            "result": false
          }
        ]
      },
      {
        "title": "Для чего нужны переменные?",
        "content": [
          {
            "title": "Переменные предназначены для хранения данных",
            "result": true
          },
          {
            "title": "Для определния типа данных",
            "result": false
          },
          {
            "title": "Для определния базы данных",
            "result": false
          }
        ]
      },
      {
        "title": "Для чего нужны функции?",
        "content": [
          {
            "title": "чтобы переиспользовать код",
            "result": true
          },
          {
            "title": "чтобы писать код",
            "result": false
          },
          {
            "title": "чтобы создавать код",
            "result": false
          }
        ]
      }
    ]
  }
}